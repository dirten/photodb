#!/usr/bin/perl -wT

# Interactive user interface for interacting with the photography database

use strict;
use warnings;
use FindBin;
binmode(STDOUT, ":encoding(UTF-8)");
binmode(STDIN, ":encoding(utf8)");

my $path;
BEGIN {
	if ($FindBin::Bin =~ /(.*)/) {
		$path = $1;
	}
}
use lib "$path/lib";
use funcs qw(/./);
use handlers;
use commands;

# Define handlers for each command
my %handlers = %commands::handlers;

# Check if any args were passed in
if (defined($ARGV[0])) {
	# We got at least one cmdline arg, so we run in one-shot mode

	# Read in and verify command
	my $command = $ARGV[0] or &nocommand(\%handlers);

	# Check if the command is defined in the handlers
	if (!exists $handlers{$command}) {
		&nocommand(\%handlers);
		exit;
	}

	# Read in and verify subcommand
	my $subcommand = $ARGV[1] or &nosubcommand(\%{$handlers{$command}}, $command);
	if (!exists $handlers{$command}{$subcommand}) {
		&nosubcommand(\%{$handlers{$command}}, $command);
		exit;
	}

	# Connect to the database
	my $db = &db;

	# Execute chosen handler
	if (&prompt({prompt=>"$handlers{$command}{$subcommand}{'desc'}. Continue?", type=>'boolean', default=>'yes'})) {
		$handlers{$command}{$subcommand}{'handler'}->($db);
	}
} else {
	# No cmdline args, so enter interactive prompt
	while (1) {
		my $rv = &prompt({prompt=>'photodb>', type=>'text'});
		# Trap important keywords first
		if ($rv eq 'exit') {
			exit;
		} elsif ($rv =~ /(\w+) (\w+)/) {
			# Check if the command is defined in the handlers
			my $command = $1;
			if (!exists $handlers{$command}) {
				&nocommand(\%handlers);
			}

			# Check if the subcommand is defined in the handlers
			my $subcommand = $2;
			if (!exists $handlers{$command}{$subcommand}) {
				&nosubcommand(\%{$handlers{$command}}, $command);
			}
		} else {
			if ($rv ne '') {
				&nocommand(\%handlers);
			}
		}
	}
}
